title: How I use Strapi as CMS for this blog.
description: >-
  Using Strapi to create blog posts api endpoints and host it on Heroku or
  Render 
content: "<p><em>Note: This blog is heavily inspired by <a href=\"https://strapi.io/blog/how-to-create-a-blog-with-svelte-kit-strapi\">this blog post from strapi</a></em></p>\n<p><br>\nToday, I'll tell you how I manage articles for this blog using <a href=\"https://strapi.io/\">Strapi</a> and hosting it via <a href=\"https://www.heroku.com/\">Heroku</a>.</p>\n<h3>Prerequisite</h3>\n<ul>\n<li><a href=\"https://nodejs.org/en/\">NodeJs</a> and <a href=\"https://www.npmjs.com/\">NPM</a> installed on your machine.</li>\n<li>Some basic JavaScript and <a href=\"https://strapi.io/\">Strapi</a> knowledge.</li>\n</ul>\n<h3>Create Strapi Project</h3>\n<p>Run this command on an empty folder to create a Strapi project called <code>cms</code> and wait for Strapi to create itself.</p>\n<pre class=\"hljs\"><code>npx create-strapi-app cms --quickstart\n</code></pre>\n<p>If Strapi hasn't run yet, use this command in <code>cms</code> folder.</p>\n<pre class=\"hljs\"><code>npm run develop\n</code></pre>\n<p>Now, Strapi should start on <a href=\"http://localhost:1337/\">http://localhost:1337/</a> and show this signup page.</p>\n<p><img src=\"https://i.imgur.com/SnHWxRI.png\" alt=\"signup\" width=50%> </img></p>\n<p>Continue by signing up and we should get to the Admin page.</p>\n<h4>Creating content types</h4>\n<p>Find <code>Content-Type Builder</code> page and create new collection types <code>Post</code> with</p>\n<ul>\n<li>A <code>title</code> field with type <code>Text</code></li>\n<li>A <code>description</code> field with type <code>Text</code> (<code>Short text</code> or <code>Long text</code> is up to you)</li>\n<li>A <code>content</code> field with <code>Rich Text</code> type</li>\n<li>A <code>slug</code> field with <code>UID</code> type and attached to <code>title</code></li>\n</ul>\n<p>We are using Strapi for our personal blog so no need for any <code>Relation</code> between user and article.<br>\n<img src=\"https://i.imgur.com/V809v5X.png\" alt=\"content types\"></p>\n<h4>Setting up roles and permissions</h4>\n<p>First, find <code>Settings</code> button on sidebar then click on <code>Roles</code> in <code>USERS &amp; PERMISSIONS PLUGIN</code> section. Next, select <code>Public</code> role and edit permissions of <code>Post</code> to only allow <code>findOne</code> and <code>find</code>.<br>\n<img src=\"https://i.imgur.com/0ybGQuN.png\" alt=\"permisson\"></p>\n<p>After we finished setting up permissions, try adding some test data on <code>Content Manger</code>. Now, we should be able to use <a href=\"http://localhost:1337/api/post\">http://localhost:1337/api/post</a>  and see the test data we put in.</p>\n<h3>Hosting</h3>\n<p>Strapi has a guide for many hosting platforms for you to select. (see. <a href=\"https://docs.strapi.io/developer-docs/latest/setup-deployment-guides/deployment.html\">Strapi Deployment</a>).</p>\n<p>I have tried hosting on <a href=\"https://dashboard.heroku.com/\">Heroku</a> and <a href=\"https://render.com/\">Render</a> and I think both platforms is good to host a Strapi for our blog so I'll tell you how I host my Strapi with both platforms.</p>\n<h4>Hosting on Heroku</h4>\n<p>Just follow <a href=\"https://docs.strapi.io/developer-docs/latest/setup-deployment-guides/deployment/hosting-guides/heroku.html#heroku-install-requirements\">Strapi Heroku Deployment</a> and you should have Strapi up on Heroku server.</p>\n<h4>Hosting on Render</h4>\n<p>You can explore your options in this <a href=\"https://render.com/docs/deploy-strapi\">article from Render</a>. For me, I'm going to use an &quot;Optimize for Cost and Simplicity&quot; option because it's simple, inexpensive and I think I don't need any scaling or zero downtime deploys thing. (<em>Note that if you want to try the same way with me, you need to at least pay for starter plan.</em>)<br>\n<br>\n<strong>Configuration steps.</strong></p>\n<ol>\n<li>Create Render Blueprint by creating file <code>render.yaml</code>.<pre class=\"hljs\"><code><span class=\"hljs-comment\"># ./render.yaml</span>\n<span class=\"hljs-attr\">services:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">web</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">strapi</span>\n    <span class=\"hljs-attr\">env:</span> <span class=\"hljs-string\">node</span>\n    <span class=\"hljs-attr\">region:</span> <span class=\"hljs-string\">singapore</span> <span class=\"hljs-comment\"># optional</span>\n    <span class=\"hljs-attr\">plan:</span> <span class=\"hljs-string\">starter</span> <span class=\"hljs-comment\"># need to be at least starter for persistent disk</span>\n    <span class=\"hljs-attr\">buildCommand:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">install</span> <span class=\"hljs-string\">&amp;&amp;</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">build</span>\n    <span class=\"hljs-attr\">startCommand:</span> <span class=\"hljs-string\">rsync</span> <span class=\"hljs-string\">-a</span> <span class=\"hljs-string\">public/</span> <span class=\"hljs-string\">/data/public/</span> <span class=\"hljs-string\">&amp;&amp;</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">start</span>\n    <span class=\"hljs-attr\">healthCheckPath:</span> <span class=\"hljs-string\">/_health</span>\n    <span class=\"hljs-attr\">disk:</span>\n      <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">strapi-data</span>\n      <span class=\"hljs-attr\">mountPath:</span> <span class=\"hljs-string\">/data</span>\n      <span class=\"hljs-attr\">sizeGB:</span> <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-attr\">envVars:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">NODE_VERSION</span>\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">~16.13.0</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">NODE_ENV</span>\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">production</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">DATABASE_FILENAME</span>\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">/data/strapi.db</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">JWT_SECRET</span>\n        <span class=\"hljs-attr\">generateValue:</span> <span class=\"hljs-literal\">true</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">ADMIN_JWT_SECRET</span>\n        <span class=\"hljs-attr\">generateValue:</span> <span class=\"hljs-literal\">true</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">APP_KEYS</span>\n        <span class=\"hljs-attr\">generateValue:</span> <span class=\"hljs-literal\">true</span>\n</code></pre>\nIn build and start command you can use yarn instead of npm, if you want.</li>\n<li>Add <code>./config/env/production/server.js</code> file.<pre class=\"hljs\"><code><span class=\"hljs-comment\">// ./config/env/production/server.js</span>\n<span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = <span class=\"hljs-function\">(<span class=\"hljs-params\">{ env }</span>) =&gt;</span> ({\n\t<span class=\"hljs-attr\">url</span>: <span class=\"hljs-title function_\">env</span>(<span class=\"hljs-string\">&quot;RENDER_EXTERNAL_URL&quot;</span>),\n\t<span class=\"hljs-attr\">dirs</span>: {\n\t<span class=\"hljs-attr\">public</span>: <span class=\"hljs-string\">&quot;/data/public&quot;</span>\n\t},\n});\n</code></pre>\n</li>\n<li>Edit <code>./config/database.js</code> file.<pre class=\"hljs\"><code><span class=\"hljs-comment\">// ./config/database.js</span>\n<span class=\"hljs-keyword\">const</span> path = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;path&#x27;</span>);\n\n<span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = <span class=\"hljs-function\">(<span class=\"hljs-params\">{ env }</span>) =&gt;</span> ({\n  <span class=\"hljs-attr\">connection</span>: {\n    <span class=\"hljs-attr\">client</span>: <span class=\"hljs-string\">&#x27;sqlite&#x27;</span>,\n    <span class=\"hljs-attr\">connection</span>: {\n\t    <span class=\"hljs-comment\">// filename: path.join(__dirname, &#x27;..&#x27;, env(&#x27;DATABASE_FILENAME&#x27;, &#x27;.tmp/data.db&#x27;)),</span>\n\t    <span class=\"hljs-attr\">filename</span>: <span class=\"hljs-title function_\">env</span>(<span class=\"hljs-string\">&#x27;DATABASE_FILENAME&#x27;</span>, path.<span class=\"hljs-title function_\">join</span>(__dirname, <span class=\"hljs-string\">&#x27;..&#x27;</span>, <span class=\"hljs-string\">&#x27;.tmp/data.db&#x27;</span>)),\n    },\n    <span class=\"hljs-attr\">useNullAsDefault</span>: <span class=\"hljs-literal\">true</span>,\n  },\n});\n\n</code></pre>\n</li>\n<li>Push your changes to GitHub or GitLab and <a href=\"https://render.com/docs/infrastructure-as-code#getting-started\">create an instance of your Blueprint</a> from the <a href=\"https://dashboard.render.com/\">Render dashboard</a>.</li>\n</ol>\n<p>Finally, we should have Strapi up on Render server ready for our blog website.</p>\n<h5>Using pm2 to manage process</h5>\n<p>Strapi recommends you use <a href=\"https://github.com/Unitech/pm2/\">pm2</a> to help manage Strapi process. We will be doing this by</p>\n<ol>\n<li>Install pm2 as a dependency<pre class=\"hljs\"><code>npm i pm2\n</code></pre>\n</li>\n<li>Create <code>server.js</code> file.<pre class=\"hljs\"><code><span class=\"hljs-comment\">// ./server.js</span>\n<span class=\"hljs-keyword\">const</span> strapi = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;@strapi/strapi&#x27;</span>);\n<span class=\"hljs-title function_\">strapi</span>().<span class=\"hljs-title function_\">start</span>();\n</code></pre>\n</li>\n<li>Create <code>ecosystem.config.js</code> by yourself or <code>pm2 init</code> (if you have installed pm2 globally)<pre class=\"hljs\"><code><span class=\"hljs-comment\">// ./ecosystem.config.js</span>\n<span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = {\n  <span class=\"hljs-attr\">apps</span>: [\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;app&quot;</span>,\n      <span class=\"hljs-attr\">script</span>: <span class=\"hljs-string\">&quot;./server.js&quot;</span>,\n      <span class=\"hljs-attr\">instance</span>: <span class=\"hljs-string\">&quot;max&quot;</span>,\n      <span class=\"hljs-attr\">exec_moode</span>: <span class=\"hljs-string\">&quot;cluster&quot;</span>,\n      <span class=\"hljs-attr\">env_production</span>: {\n        <span class=\"hljs-attr\">NODE_ENV</span>: <span class=\"hljs-string\">&quot;production&quot;</span>,\n      },\n    },\n  ],\n};\n</code></pre>\nIf you wonder what is all these configs please visit <a href=\"https://pm2.keymetrics.io/docs/usage/application-declaration/\">pm2 doc</a></li>\n<li>Edit <code>package.json</code> by changing <code>start</code> command.<pre class=\"hljs\"><code><span class=\"hljs-attr\">&quot;scripts&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n...<span class=\"hljs-punctuation\">,</span>\n<span class=\"hljs-attr\">&quot;start&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;pm2-runtime start ecosystem.config.js --env production&quot;</span><span class=\"hljs-punctuation\">,</span>\n...\n<span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n</code></pre>\n</li>\n</ol>\n<p>Now, If you commit and push these additions to Heroku or Render, you should see some <code>PM2 log</code> in logs.</p>\n<h3>Conclusion</h3>\n<p>Hooray! Now, you have a CMS ready for your personal blog and already online on Heroku/Render Server. If you have any question please comment below or <a href=\"/contact\">contact me</a>, and be sure to check <a href=\"https://docs.strapi.io/developer-docs/latest/getting-started/introduction.html\">Strapi Docs</a>, <a href=\"https://pm2.keymetrics.io/docs/usage/quick-start/\">pm2 Docs</a>, and <a href=\"https://github.com/RiwEZ/TanatBlogCMS\">source code on Github</a> first.</p>\n"
created_at: '2022-04-10T11:45:46.229Z'
updated_at: '2022-04-10T11:45:46.229Z'
slug: how-i-use-strapi-as-cms-for-this-blog
